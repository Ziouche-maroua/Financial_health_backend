// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement()) // Unique identifier for the user
  email      String   @unique // Unique email address of the user
  first_name String   @default("") // First name of the user
  last_name  String   @default("") // Last name of the user
  password   String // Password of the user
  
  
  expenses    Expense[]    // Relation to Expense
  incomes     Income[]     // Relation to Income
  profits     Profit[]     // Relation to Profit
  report     Report[]

  
}

model Expense {
  id               Int      @id @default(autoincrement()) // Unique identifier for the expense
  date             DateTime // Date of the expense
  amount           Float     // Amount spent
  expense_category String    // Category of the expense
  description      String?   // Description of the expense (optional)
  
  user             User?     @relation(fields: [userId], references: [id])
  userId           Int?      // Optional relation to User
}

model Income {
  id             Int      @id @default(autoincrement()) // Unique identifier for the income
  date           DateTime // Date of the income
  amount         Float     // Amount received
  product_line   String    // Product line associated with the income
  description    String?   // Description of the income (optional)
  
  user           User?     @relation(fields: [userId], references: [id])
  userId         Int?      // Optional relation to User
}

model Profit {
  id             Int      @id @default(autoincrement()) // Unique identifier for profit
  date           DateTime // Date of the profit entry
  revenue        Float     // Total revenue
  expenses       Float     // Total expenses
  net_profit     Float     // Net profit (revenue - expenses)
  profit_margin   Float     // Profit margin
  description    String?   // Description of the profit entry (optional)

  user           User?     @relation(fields: [userId], references: [id])
  userId         Int?      // Optional relation to User
}

model Report {
  id         Int      @id @default(autoincrement())
  userId     Int      // User who generated the report
  type       String   // Report type, e.g., "Income Statement"
  startDate  DateTime // Start of the report period
  endDate    DateTime // End of the report period
  createdAt  DateTime @default(now()) // Timestamp of report generation
  
  user       User     @relation(fields: [userId], references: [id])
}

